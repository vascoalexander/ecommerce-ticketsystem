@{
    ViewBag.Title = "Benachrichtigungen";
    var messageLength = 100;
}
@using WebApp.Helper
@model WebApp.ViewModels.MessagesViewModel
<div class="my-4">
    <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-secondary">
        Zur√ºck zum Dashboard
    </a>
</div>
<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="SendMessage" class="btn btn-outline-primary">Neue Nachricht</a>
</div>

<ul class="nav nav-tabs" id="myMessageTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="received-tab" data-bs-toggle="tab" data-bs-target="#received" type="button" role="tab" aria-controls="received" aria-selected="true">
            Empfangen (@Model.ReceivedMessages.Count())
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="sent-tab" data-bs-toggle="tab" data-bs-target="#sent" type="button" role="tab" aria-controls="sent" aria-selected="false">
            Gesendet (@Model.SentMessages.Count())
        </button>
    </li>
</ul>

<div class="tab-content" id="myMessageTabsContent">
    <div class="tab-pane fade show active" id="received" role="tabpanel" aria-labelledby="received-tab">
        <h3 class="mt-3">Empfangene Nachrichten</h3>
        @if (Model.ReceivedMessages != null && Model.ReceivedMessages.Any())
        {
            <div class="list-group">
                @foreach (var message in Model.ReceivedMessages)
                {
                    <div class="list-group-item list-group-item-action @(message.IsRead ? "" : "unread-message")" aria-current="true">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@message.Subject@if (!message.IsRead){<span class="badge bg-primary ms-2" style="font-size: 12px; vertical-align: text-top;">NEU</span>}</h5>
                            <small class="text-muted">@message.SentAt.ToString("g")</small>
                        </div>
                        <p class="mb-1">
                            <strong>Von:</strong> @message.Sender.UserName (@message.Sender.Email)
                        </p>
                        <small>@Utility.Truncate(@message.Body, @messageLength)...</small>
                        <a href="@Url.Action("MessageDetails", "Account", new { messageId = message.Id })" class="stretched-link"></a>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="mt-3">Du hast noch keine Nachrichten empfangen.</p>
        }
    </div>

    <div class="tab-pane fade" id="sent" role="tabpanel" aria-labelledby="sent-tab">
        <h3 class="mt-3">Gesendete Nachrichten</h3>
        @if (Model.SentMessages != null && Model.SentMessages.Any())
        {
            <div class="list-group">
                @foreach (var message in Model.SentMessages)
                {
                    <div class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@message.Subject</h5>
                            <small class="text-muted">@message.SentAt.ToString("g")</small>
                        </div>
                        <p class="mb-1">
                            <strong>An:</strong> @message.Receiver.UserName (@message.Receiver.Email)
                        </p>
                        <small>@Utility.Truncate(@message.Body, @messageLength)...</small>
                        <a href="@Url.Action("MessageDetails", "Account", new { messageId = message.Id })" class="stretched-link"></a>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="mt-3">Du hast noch keine Nachrichten gesendet.</p>
        }
    </div>
</div>