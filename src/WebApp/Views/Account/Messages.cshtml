@{
    ViewBag.Title = "Benachrichtigungen";
    var messageLength = 100;
}
@using WebApp.Helper
@model WebApp.ViewModels.MessagesViewModel
<div class="my-4">
    <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-secondary">
        Zur√ºck zum Dashboard
    </a>
</div>
<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="SendMessage" class="btn btn-outline-primary">Neue Nachricht</a>
</div>

<div class="card shadow-sm">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs" id="myMessageTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="received-tab" data-bs-toggle="tab" data-bs-target="#received" type="button" role="tab" aria-controls="received" aria-selected="true">
                    Empfangen (@Model.ReceivedMessages.Count(m => m.IsDeletedReceiver == false))
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="sent-tab" data-bs-toggle="tab" data-bs-target="#sent" type="button" role="tab" aria-controls="sent" aria-selected="false">
                    Gesendet (@Model.SentMessages.Count())
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="notifications-tab" data-bs-toggle="tab" data-bs-target="#notifications" type="button" role="tab" aria-controls="notifications" aria-selected="false">
                    Benachrichtigungen (@Model.SentMessages.Count(m => m.IsDeletedSender == false))
                </button>
            </li>
        </ul>
    </div>
    <div class="card-body">
        <div class="tab-content" id="myMessageTabsContent">

            <!-- Empfangen -->
            <div class="tab-pane fade show active" id="received" role="tabpanel" aria-labelledby="received-tab">
                @if (Model.ReceivedMessages != null && Model.ReceivedMessages.Any())
                {
                    <div class="list-group">
                        @foreach (var message in Model.ReceivedMessages)
                        {
                            @if (!message.IsDeletedReceiver)
                            {
                                <div
                                    class="list-group-item list-group-item-action @(message.IsRead ? "" : "unread-message")"
                                    aria-current="true">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">
                                            @message.Subject
                                            @if (!message.IsRead)
                                            {
                                                <span class="badge bg-primary ms-2"
                                                      style="font-size: 12px; vertical-align: text-top;">NEU</span>
                                            }
                                        </h5>
                                        <small class="text-muted">@message.SentAt.ToString("g")</small>
                                    </div>
                                    <p class="mb-1">
                                        <strong>Von:</strong> @message.Sender.UserName (@message.Sender.Email)
                                    </p>
                                    <small>@Utility.Truncate(message.Body, messageLength)...</small>
                                    <a href="@Url.Action("MessageDetails", "Account", new { messageId = message.Id })"
                                       class="stretched-link"></a>
                                </div>
                            }
                        }
                    </div>
                }
                else
                {
                    <p class="mt-3">Du hast noch keine Nachrichten empfangen.</p>
                }
            </div>

            <!-- Gesendet -->
            <div class="tab-pane fade" id="sent" role="tabpanel" aria-labelledby="sent-tab">
                @if (Model.SentMessages != null && Model.SentMessages.Any())
                {
                    <div class="list-group">
                        @foreach (var message in Model.SentMessages)
                        {
                            @if (!message.IsDeletedSender)
                            {
                                <div class="list-group-item list-group-item-action">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">@message.Subject</h5>
                                        <small class="text-muted">@message.SentAt.ToString("g")</small>
                                    </div>
                                    <p class="mb-1">
                                        <strong>An:</strong> @message.Receiver.UserName (@message.Receiver.Email)
                                    </p>
                                    <small>@Utility.Truncate(message.Body, messageLength)...</small>
                                    <a href="@Url.Action("MessageDetails", "Account", new { messageId = message.Id })" class="stretched-link"></a>
                                </div>
                            }
                        }
                    </div>
                }
                else
                {
                    <p class="mt-3">Du hast noch keine Nachrichten gesendet.</p>
                }
            </div>

            <!-- Systemnachrichten / Benachrichtigungen -->
            <div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
                @if (Model.SystemMessages != null && Model.SystemMessages.Any())
                {
                    <div class="list-group">
                        @foreach (var message in Model.SystemMessages)
                        {
                            <div class="list-group-item list-group-item-action @(message.IsRead ? "" : "unread-message")">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">
                                        @message.Subject
                                        @if (!message.IsRead)
                                        {
                                            <span class="badge bg-warning ms-2" style="font-size: 12px; vertical-align: text-top;">NEU</span>
                                        }
                                    </h5>
                                    <small class="text-muted">@message.SentAt.ToString("g")</small>
                                </div>
                                <small>@Utility.Truncate(message.Body, messageLength)...</small>
                                <a href="@Url.Action("MessageDetails", "Account", new { messageId = message.Id })" class="stretched-link"></a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="mt-3">Keine Systembenachrichtigungen vorhanden.</p>
                }
            </div>

        </div>
    </div>
</div>
