@model WebApp.ViewModels.ProjectDetailViewModel
@{
    Layout = "_LayoutLushware";
    ViewBag.Title = "Details Project";

    // Status-Logik – du kannst das hier anpassen, wenn du ein echtes Statusfeld hast:
    string statusText = "Aktiv"; // z. B. Model.Project.Status, falls vorhanden
    string statusClass = statusText switch
    {
        "Aktiv" => "bg-success",
        "Abgeschlossen" => "bg-secondary",
        "Geplant" => "bg-warning",
        _ => "bg-dark"
    };
}
<div class="container my-5">
    <div class="mb-4">
        <a href="@Url.Action("AdminPage", "Admin")" class="btn btn-outline-secondary">
            Zurück zur Übersicht
        </a>
    </div>

    <div class="card shadow-sm p-4 mb-4">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
            <h2 class="fw-bold mb-2 mb-md-0">@Model.Project.Title</h2>
            <span class="badge text-white @statusClass px-3 py-2" style="border-radius: 0.6rem; font-size: 0.9rem;">
                @statusText
            </span>
        </div>
        <div class="text-muted mt-2">
            Kategorie: <strong>@Model.Project.Category</strong><br />
            Zeitraum: <strong>@Model.Project.StartDate.ToString("dd.MM.yyyy")</strong> - <strong>@Model.Project.EndDate.ToString("dd.MM.yyyy")</strong>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h5 class="text-secondary mb-3">Projektbeschreibung</h5>
            <p class="mb-0">@Model.Project.Description</p>
        </div>
    </div>

    <div class="card shadow-sm p-4">
        <h4 class="mb-3">Tickets im Projekt</h4>

        @if (Model.Tickets == null || !Model.Tickets.Any())
        {
            <div class="pt-3 text-muted">Keine Tickets zu diesem Projekt gefunden.</div>
        }
        else
        {
            <div class="row fw-semibold border-bottom pb-2 d-none d-md-flex">
                <div class="col-md-2">ID</div>
                <div class="col-md-2">Titel</div>
                <div class="col-md-2 text-center">Ersteller</div>
                <div class="col-md-2 text-center">Status</div>
                <div class="col-md-2 text-center">Zugewiesen an</div>
                <div class="col-md-2 text-center">Aktionen</div>
            </div>

            @foreach (var ticket in Model.Tickets)
            {
                string ticketStatusClass = ticket.Status switch
                {
                    TicketStatus.Open => "bg-success",
                    TicketStatus.InProgress => "bg-warning",
                    TicketStatus.Closed => "bg-danger",
                    _ => "bg-secondary"
                };

                <div class="row align-items-start py-3 border-bottom text-nowrap text-md-wrap text-break">
                    <div class="col-12 col-md-2 mb-2 mb-md-0">
                        <strong>#@ticket.Id</strong>
                    </div>
                    <div class="col-12 col-md-2 mb-2 mb-md-0">
                        @ticket.Title
                    </div>
                    <div class="col-12 col-md-2 mb-2 mb-md-0 text-center">
                        @ticket.CreatorUser?.UserName
                    </div>
                    <div class="col-12 col-md-2 mb-2 mb-md-0 text-center">
                        <span class="badge text-white @ticketStatusClass w-100 text-center d-inline-block"
                              style="padding: 0.5rem 0.6rem; border-radius: 0.6rem; font-size: 0.85rem;">
                            @ticket.Status
                        </span>
                    </div>
                    <div class="col-12 col-md-2 mb-2 mb-md-0 text-center">
                        @ticket.AssignedUser?.UserName
                    </div>
                    <div class="col-12 col-md-2 d-flex flex-wrap gap-2">
                        <a class="btn btn-sm btn-outline-primary flex-fill" href="@Url.Action("Detail", "Ticket", new { id = ticket.Id, returnUrl = "AdminPage" })">Details</a>
                        <a class="btn btn-sm btn-outline-success flex-fill" href="@Url.Action("Edit", "Ticket", new { id = ticket.Id })">Bearbeiten</a>
                    </div>
                </div>
            }
        }
    </div>
</div>

